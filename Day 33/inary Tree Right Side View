class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> result;
        if (!root) return result;

        queue<TreeNode*> q;
        q.push(root);

        while (!q.empty()) {
            int levelSize = q.size();
            TreeNode* currentNode = nullptr;

            for (int i = 0; i < levelSize; i++) {
                currentNode = q.front();
                q.pop();

                // Enqueue left and right children
                if (currentNode->left) q.push(currentNode->left);
                if (currentNode->right) q.push(currentNode->right);
            }

            // After the loop, currentNode points to the last node of this level (rightmost)
            result.push_back(currentNode->val);
        }

        return result;
    }
};
